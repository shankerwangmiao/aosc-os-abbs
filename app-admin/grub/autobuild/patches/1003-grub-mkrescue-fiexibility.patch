diff -Naur grub/util/grub-mkrescue.c grub.flexibility/util/grub-mkrescue.c
--- grub/util/grub-mkrescue.c	2023-07-06 19:23:47.706483394 +0800
+++ grub.flexibility/util/grub-mkrescue.c	2023-07-06 19:35:00.625491609 +0800
@@ -52,6 +52,7 @@
 static char **xorriso_argv;
 static char *iso_uuid;
 static char *iso9660_dir;
+static char *efidir;
 
 static void
 xorriso_push (const char *val)
@@ -273,6 +274,7 @@
       case GRUB_INSTALL_PLATFORM_IA64_EFI:
       case GRUB_INSTALL_PLATFORM_ARM_EFI:
       case GRUB_INSTALL_PLATFORM_ARM64_EFI:
+      case GRUB_INSTALL_PLATFORM_LOONGARCH64_EFI:
       case GRUB_INSTALL_PLATFORM_RISCV32_EFI:
       case GRUB_INSTALL_PLATFORM_RISCV64_EFI:
 	fprintf (load_cfg_f, "search --set=root --file /.disk/%s.uuid\n", iso_uuid);
@@ -288,11 +290,13 @@
 
   grub_install_push_module ("search");
   grub_install_push_module ("iso9660");
+  grub_install_push_module ("fat");
   grub_install_make_image_wrap (source_dirs[plat], "/boot/grub", output,
 				0, load_cfg,
 				mkimage_target, 0);
   grub_install_pop_module ();
   grub_install_pop_module ();
+  grub_install_pop_module ();
   grub_util_unlink (load_cfg);
 }
 
@@ -323,13 +327,19 @@
   load_cfg = grub_util_make_temporary_file ();
 
   load_cfg_f = grub_util_fopen (load_cfg, "wb");
+  fprintf (load_cfg_f, "search --file --set=root --hint=${root}, /boot/grub/grub.cfg\n");
+  fprintf (load_cfg_f, "set prefix=(${root})/boot/grub\n");
   write_part (load_cfg_f, source_dirs[plat]);
   fclose (load_cfg_f);
 
+  grub_install_push_module ("search");
   grub_install_push_module ("iso9660");
-  grub_install_make_image_wrap (source_dirs[plat], "()/boot/grub", output,
+  grub_install_push_module ("fat");
+  grub_install_make_image_wrap (source_dirs[plat], "/boot/grub", output,
 				0, load_cfg, mkimage_target, 0);
   grub_install_pop_module ();
+  grub_install_pop_module ();
+  grub_install_pop_module ();
   grub_util_unlink (load_cfg);
 }
 
@@ -767,6 +777,7 @@
       || source_dirs[GRUB_INSTALL_PLATFORM_RISCV64_EFI])
     {
       FILE *f;
+      efidir = grub_util_make_temporary_dir ();
       char *efidir_efi = grub_util_path_concat (2, iso9660_dir, "efi");
       char *efidir_efi_boot = grub_util_path_concat (3, iso9660_dir, "efi", "boot");
       char *imgname, *img32, *img64, *img_mac = NULL;
@@ -863,9 +874,10 @@
       xorriso_push ("-efi-boot-part");
       xorriso_push ("--efi-boot-image");
 
-      /* Don't unlink the efidir_efi_boot directory so that we have a duplicate on the ISO 9660 file system. */
+      grub_util_unlink_recursive (efidir);
       free (efiimgfat);
       free (efidir_efi);
+      free (efidir);
       grub_install_pop_module ();
       grub_install_pop_module ();
       grub_install_pop_module ();
@@ -1012,6 +1024,8 @@
   xorriso_push (output_image);
   xorriso_push ("-r");
   xorriso_push (iso9660_dir);
+  if (efidir)
+    xorriso_push (efidir);
   xorriso_push ("--sort-weight");
   xorriso_push ("0");
   xorriso_push ("/");
@@ -1029,6 +1043,11 @@
     grub_util_error ("`%s` invocation failed\n", "xorriso");
 
   grub_util_unlink_recursive (iso9660_dir);
+  if (efidir)
+    {
+      grub_util_unlink_recursive (efidir);
+      free(efidir);
+    }
 
   if (sysarea_img)
     grub_util_unlink (sysarea_img);
