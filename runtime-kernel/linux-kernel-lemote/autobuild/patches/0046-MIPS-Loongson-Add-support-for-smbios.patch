From e63008304c80812f973213a77fc60f1e2a494737 Mon Sep 17 00:00:00 2001
From: Huacai Chen <chenhc@lemote.com>
Date: Thu, 1 Dec 2016 09:51:35 +0800
Subject: [PATCH 046/136] MIPS: Loongson: Add support for smbios

Firmware pass the address of smbios to kernel by memmap, dmidecode
applications parsing "/proc/efi/systab".

Signed-off-by: Huacai Chen <chenhc@lemote.com>
---
 arch/mips/loongson64/common/Makefile   |   2 +-
 arch/mips/loongson64/common/efi.c      | 105 +++++++++++++++++++++++++
 arch/mips/loongson64/common/env.c      |   2 +
 arch/mips/loongson64/common/mem.c      |   8 ++
 arch/mips/loongson64/loongson-3/numa.c |   8 ++
 5 files changed, 124 insertions(+), 1 deletion(-)
 create mode 100644 arch/mips/loongson64/common/efi.c

diff --git a/arch/mips/loongson64/common/Makefile b/arch/mips/loongson64/common/Makefile
index 684624f61..392e23100 100644
--- a/arch/mips/loongson64/common/Makefile
+++ b/arch/mips/loongson64/common/Makefile
@@ -4,7 +4,7 @@
 #
 
 obj-y += setup.o init.o cmdline.o env.o time.o reset.o irq.o \
-    bonito-irq.o mem.o machtype.o platform.o serial.o
+    bonito-irq.o mem.o machtype.o platform.o serial.o efi.o
 obj-$(CONFIG_PCI) += pci.o
 
 #
diff --git a/arch/mips/loongson64/common/efi.c b/arch/mips/loongson64/common/efi.c
new file mode 100644
index 000000000..52e45726e
--- /dev/null
+++ b/arch/mips/loongson64/common/efi.c
@@ -0,0 +1,105 @@
+#include <linux/fs.h>
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/kobject.h>
+#include <linux/proc_fs.h>
+#include <linux/seq_file.h>
+
+static struct kobject *efi_kobj;
+struct proc_dir_entry *proc_efi;
+extern unsigned int has_systab;
+extern unsigned long systab_addr;
+
+static int show_systab(struct seq_file *m, void *v)
+{
+	seq_printf(m, "SMBIOS=0x%lx\n", systab_addr);
+
+	return 0;
+}
+
+static void *systab_start(struct seq_file *m, loff_t *pos)
+{
+	unsigned long i = *pos;
+
+	return i ? NULL : (void *)0x1;
+}
+
+static void *systab_next(struct seq_file *m, void *v, loff_t *pos)
+{
+	++*pos;
+
+	return systab_start(m, pos);
+}
+
+static void systab_stop(struct seq_file *m, void *v)
+{
+}
+
+const struct seq_operations systab_op = {
+	.start	= systab_start,
+	.next	= systab_next,
+	.stop	= systab_stop,
+	.show	= show_systab,
+};
+
+
+static int systab_open(struct inode *inode, struct file *file)
+
+{
+	return seq_open(file, &systab_op);
+}
+
+static const struct file_operations proc_systab_operations = {
+	.open		= systab_open,
+	.read		= seq_read,
+	.llseek		= seq_lseek,
+	.release	= seq_release,
+};
+
+/**
+  * efi_init_kernfs - Create efi in procfs/sysfs
+  */
+int __init efi_init_kernfs(void)
+{
+	efi_kobj = kobject_create_and_add("efi", firmware_kobj);
+	if (!efi_kobj)
+		return -ENOMEM;
+
+	proc_efi = proc_mkdir("efi", NULL);
+	if (!proc_efi)
+		return -ENOMEM;
+
+	if (!proc_create("systab", 0, proc_efi, &proc_systab_operations))
+		return -ENOMEM;
+
+	return 0;
+}
+
+/**
+  * efi_exit_kernfs - Remove efi from procfs/sysfs
+  */
+void __exit efi_exit_kernfs(void)
+{
+	remove_proc_entry("systab", proc_efi);
+	remove_proc_entry("efi", NULL);
+	kobject_put(efi_kobj);
+}
+
+static int __init init_efi(void)
+{
+	if (!has_systab)
+		return 0;
+	else
+		return efi_init_kernfs();
+}
+
+static void __exit exit_efi(void)
+{
+	if (!has_systab)
+		return;
+	else
+		efi_exit_kernfs();
+}
+
+subsys_initcall(init_efi);
+module_exit(exit_efi);
diff --git a/arch/mips/loongson64/common/env.c b/arch/mips/loongson64/common/env.c
index 3b762606a..d1e9bef45 100644
--- a/arch/mips/loongson64/common/env.c
+++ b/arch/mips/loongson64/common/env.c
@@ -31,6 +31,8 @@ u64 loongson_chiptemp[MAX_PACKAGES];
 u64 loongson_freqctrl[MAX_PACKAGES];
 
 unsigned long long smp_group[4];
+unsigned int has_systab = 0;
+unsigned long systab_addr;
 
 #define parse_even_earlier(res, option, p)				\
 do {									\
diff --git a/arch/mips/loongson64/common/mem.c b/arch/mips/loongson64/common/mem.c
index 4254ac4ec..444fd93cd 100644
--- a/arch/mips/loongson64/common/mem.c
+++ b/arch/mips/loongson64/common/mem.c
@@ -54,6 +54,9 @@ void __init prom_init_memory(void)
 
 #else /* CONFIG_LEFI_FIRMWARE_INTERFACE */
 
+extern unsigned int has_systab;
+extern unsigned long systab_addr;
+
 void __init prom_init_memory(void)
 {
 	int i;
@@ -81,6 +84,11 @@ void __init prom_init_memory(void)
 			memblock_reserve(loongson_memmap->map[i].mem_start,
 				(u64)loongson_memmap->map[i].mem_size << 20);
 			break;
+		case SMBIOS_TABLE:
+			has_systab = 1;
+			systab_addr = loongson_memmap->map[i].mem_start;
+			memblock_reserve(loongson_memmap->map[i].mem_start, 0x2000);
+			break;
 		}
 	}
 }
diff --git a/arch/mips/loongson64/loongson-3/numa.c b/arch/mips/loongson64/loongson-3/numa.c
index 7e7376cc9..f96cd5e94 100644
--- a/arch/mips/loongson64/loongson-3/numa.c
+++ b/arch/mips/loongson64/loongson-3/numa.c
@@ -116,6 +116,9 @@ static unsigned long nid_to_addroffset(unsigned int nid)
 	return result;
 }
 
+extern unsigned int has_systab;
+extern unsigned long systab_addr;
+
 static void __init szmem(unsigned int node)
 {
 	u32 i, mem_type;
@@ -163,6 +166,11 @@ static void __init szmem(unsigned int node)
 			memblock_reserve(((node_id << 44) + mem_start),
 				mem_size << 20);
 			break;
+		case SMBIOS_TABLE:
+			has_systab = 1;
+			systab_addr = mem_start;
+			memblock_reserve(((node_id << 44) + mem_start), 0x2000);
+			break;
 		}
 	}
 }
-- 
2.39.1

