From 1619cf94097930094a77f4a15db6d23ba20a8391 Mon Sep 17 00:00:00 2001
From: Huacai Chen <chenhc@lemote.com>
Date: Thu, 1 Dec 2016 09:51:35 +0800
Subject: [PATCH 038/136] MIPS: Loongson: Add a hook to turn on/off DPMS when
 Fn+F7 pressed.

Signed-off-by: Huacai Chen <chenhc@lemote.com>
Signed-off-by: Hongliang Tao <taohl@lemote.com>
Signed-off-by: Hua Yan <yanh@lemote.com>
---
 drivers/gpu/drm/radeon/radeon_drv.c     | 32 +++++++++++++++++++++++++
 drivers/platform/mips/lemote3a-laptop.c | 26 +++++++++++++++++++-
 2 files changed, 57 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/radeon/radeon_drv.c b/drivers/gpu/drm/radeon/radeon_drv.c
index c2573096d..ffc86d1db 100644
--- a/drivers/gpu/drm/radeon/radeon_drv.c
+++ b/drivers/gpu/drm/radeon/radeon_drv.c
@@ -667,6 +667,38 @@ static struct pci_driver radeon_kms_pci_driver = {
 	.driver.pm = &radeon_pm_ops,
 };
 
+static int radeon_lvds_dpms_callback(struct device *dev, void *arg)
+{
+	int on = *(unsigned long *)arg;
+	struct drm_device *ddev = dev_get_drvdata(dev);
+	struct drm_connector *connector;
+
+	list_for_each_entry(connector, &ddev->mode_config.connector_list, head) {
+		if (connector->connector_type == DRM_MODE_CONNECTOR_LVDS) {
+			if (on)
+				drm_helper_connector_dpms(connector, DRM_MODE_DPMS_ON);
+			else
+				drm_helper_connector_dpms(connector, DRM_MODE_DPMS_OFF);
+		}
+	}
+
+	return 0;
+}
+
+void radeon_lvds_dpms_off(void)
+{
+	int on = 0;
+
+	driver_for_each_device(&pdriver->driver, NULL, &on, radeon_lvds_dpms_callback);
+}
+
+void radeon_lvds_dpms_on(void)
+{
+	int on = 1;
+
+	driver_for_each_device(&pdriver->driver, NULL, &on, radeon_lvds_dpms_callback);
+}
+
 static int __init radeon_init(void)
 {
 	if (vgacon_text_force() && radeon_modeset == -1) {
diff --git a/drivers/platform/mips/lemote3a-laptop.c b/drivers/platform/mips/lemote3a-laptop.c
index b06e7b6ae..cfbca3a53 100644
--- a/drivers/platform/mips/lemote3a-laptop.c
+++ b/drivers/platform/mips/lemote3a-laptop.c
@@ -203,6 +203,8 @@ static int sci_pci_init(void);
 static irqreturn_t lemote3a_sci_int_routine(int irq, void * dev_id);
 /* SCI event handler */
 void lemote3a_sci_event_handler(int event);
+/* SCI device dpms event handler */
+static int lemote3a_dpms_handler(int status);
 /* SCI device over temperature event handler */
 static int lemote3a_over_temp_handler(int status);
 /* SCI device Throttling the CPU event handler */
@@ -339,7 +341,7 @@ static const struct sci_event se[] =
 	[SCI_EVENT_NUM_AUDIO_MUTE] =		{0, NULL},
 	[SCI_EVENT_NUM_VOLUME_DN] =		{0, NULL},
 	[SCI_EVENT_NUM_VOLUME_UP] =		{0, NULL},
-	[SCI_EVENT_NUM_BLACK_SCREEN] =		{0, NULL},
+	[SCI_EVENT_NUM_BLACK_SCREEN] =		{0, lemote3a_dpms_handler},
 	[SCI_EVENT_NUM_DISPLAY_TOGGLE] =	{0, NULL},
 	[SCI_EVENT_NUM_3G] =			{0, NULL},
 	[SCI_EVENT_NUM_SIM] =			{0, NULL},
@@ -1064,6 +1066,28 @@ void lemote3a_sci_event_handler(int event)
 	}
 }
 
+extern void radeon_lvds_dpms_on(void);
+extern void radeon_lvds_dpms_off(void);
+
+static void lemote3a_lvds_dpms_callback(struct work_struct *dummy)
+{
+	int backlight_on = ec_read(INDEX_BACKLIGHT_STSCTRL);
+
+	if (backlight_on)
+		radeon_lvds_dpms_on();
+	else
+		radeon_lvds_dpms_off();
+}
+
+static DECLARE_WORK(lvds_dpms_work, lemote3a_lvds_dpms_callback);
+
+static int lemote3a_dpms_handler(int status)
+{
+	schedule_work(&lvds_dpms_work);
+
+	return 0;
+}
+
 /* SCI device over temperature event handler */
 static int lemote3a_over_temp_handler(int status)
 {
-- 
2.39.1

