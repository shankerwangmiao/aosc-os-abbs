From 220a3a8db3ea841f1a17775622cf9eda627fd313 Mon Sep 17 00:00:00 2001
From: Huacai Chen <chenhc@lemote.com>
Date: Thu, 9 Nov 2017 10:31:55 +0800
Subject: [PATCH 032/136] MIPS: Loongson: Add ACPI Power Button driver

Signed-off-by: Huacai Chen <chenhc@lemote.com>
---
 arch/mips/loongson64/loongson-3/acpi_init.c | 78 +++++++++++++++++++--
 1 file changed, 73 insertions(+), 5 deletions(-)

diff --git a/arch/mips/loongson64/loongson-3/acpi_init.c b/arch/mips/loongson64/loongson-3/acpi_init.c
index c8c0699d8..9c39d54ac 100644
--- a/arch/mips/loongson64/loongson-3/acpi_init.c
+++ b/arch/mips/loongson64/loongson-3/acpi_init.c
@@ -1,8 +1,11 @@
 // SPDX-License-Identifier: GPL-2.0
 #include <linux/io.h>
 #include <linux/init.h>
+#include <linux/pci.h>
+#include <linux/input.h>
 #include <linux/ioport.h>
 #include <linux/export.h>
+#include <linux/interrupt.h>
 
 #define SBX00_ACPI_IO_BASE 0x800
 #define SBX00_ACPI_IO_SIZE 0x100
@@ -19,6 +22,9 @@
 #define PM2_INDEX       0xCD0
 #define PM2_DATA        0xCD1
 
+static int acpi_irq;
+static struct input_dev *button;
+
 /*
  * SCI interrupt need acpi space, allocate here
  */
@@ -84,11 +90,6 @@ void acpi_sleep_prepare(void)
 
 	acpi_hw_clear_status();
 
-	/* PMEnable: Enable PwrBtn */
-	value = inw(ACPI_PM_EVT_BLK + 2);
-	value |= 1 << 8;
-	outw(value, ACPI_PM_EVT_BLK + 2);
-
 	/* Turn ON LED blink */
 	value = pm_ioread(0x7c);
 	value = (value & ~0xc) | 0x8;
@@ -107,6 +108,68 @@ void acpi_sleep_complete(void)
 	pm_iowrite(0x7c, value);
 }
 
+static irqreturn_t acpi_int_routine(int irq, void *dev_id)
+{
+	u16 value;
+
+	/* PMStatus: Check PwrBtnStatus */
+	value = inw(ACPI_PM_EVT_BLK);
+	if (value & (1 << 8)) {
+		outw(1 << 8, ACPI_PM_EVT_BLK);
+		pr_info("Power Button pressed...\n");
+		input_report_key(button, KEY_POWER, 1);
+		input_sync(button);
+		input_report_key(button, KEY_POWER, 0);
+		input_sync(button);
+		return IRQ_HANDLED;
+	}
+
+	return IRQ_NONE;
+}
+
+static int __init power_button_init(void)
+{
+	int ret;
+	struct pci_dev *dev;
+
+	dev = pci_get_bus_and_slot(0, 0);
+	switch (dev->vendor) {
+	case PCI_VENDOR_ID_AMD:
+	case PCI_VENDOR_ID_ATI:
+		acpi_irq = 7;
+		break;
+	default:
+		return -ENODEV;
+	}
+
+	button = input_allocate_device();
+	if (!button)
+		return -ENOMEM;
+
+	button->name = "ACPI Power Button";
+	button->phys = "acpi/button/input0";
+	button->id.bustype = BUS_HOST;
+	button->dev.parent = NULL;
+	input_set_capability(button, EV_KEY, KEY_POWER);
+
+	ret = request_irq(acpi_irq, acpi_int_routine, IRQF_SHARED, "acpi", acpi_int_routine);
+	if (ret) {
+		pr_err("ACPI Power Button Driver: Request irq %d failed!\n", acpi_irq);
+		return -EFAULT;
+	}
+
+	ret = input_register_device(button);
+	if (ret) {
+		input_free_device(button);
+		return ret;
+	}
+
+	pr_info("ACPI Power Button Driver: Init successful!\n");
+
+	return 0;
+}
+device_initcall(power_button_init);
+
 void acpi_registers_setup(void)
 {
 	u32 value;
@@ -168,6 +231,11 @@ void acpi_registers_setup(void)
 	value = pm2_ioread(0xf8);
 	value |= ((1 << 5) | (1 << 1));
 	pm2_iowrite(0xf8, value);
+
+	/* PMEnable: Enable PwrBtn */
+	value = inw(ACPI_PM_EVT_BLK + 2);
+	value |= 1 << 8;
+	outw(value, ACPI_PM_EVT_BLK + 2);
 }
 
 int __init sbx00_acpi_init(void)
-- 
2.39.1

