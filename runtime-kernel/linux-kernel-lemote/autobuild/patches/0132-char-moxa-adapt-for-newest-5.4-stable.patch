From 62f6a2d847c53e528d739d3410c9815e5c77134d Mon Sep 17 00:00:00 2001
From: Icenowy Zheng <uwu@icenowy.me>
Date: Thu, 15 Sep 2022 18:17:24 +0800
Subject: [PATCH 132/136] char: moxa: adapt for newest 5.4 stable

Signed-off-by: Icenowy Zheng <uwu@icenowy.me>
---
 drivers/char/moxa/npreal2.c | 53 +++++++++++++++++--------------------
 1 file changed, 25 insertions(+), 28 deletions(-)

diff --git a/drivers/char/moxa/npreal2.c b/drivers/char/moxa/npreal2.c
index e5b6cf31c..f573f8df7 100644
--- a/drivers/char/moxa/npreal2.c
+++ b/drivers/char/moxa/npreal2.c
@@ -304,6 +304,7 @@ struct npreal_struct
 	wait_queue_head_t 	delta_msr_wait;
 	struct async_icount	icount; /* kernel counters for the 4 input interrupts */
 	struct nd_struct  	*net_node;
+	int			closing;
 
 
 	/* We use spin_lock_irqsave instead of semaphonre here.
@@ -939,11 +940,11 @@ npreal_close(
 
 	// Scott: 2005-09-05
 	// Prevent race condition on closing.
-	if (info->flags & ASYNC_CLOSING) {
+	if (info->closing) {
 		return;
 	}
 
-	info->flags |= ASYNC_CLOSING;
+	info->closing = 1;
 	tty->closing = 1;
 	/*
 	 * Save the termios structure, since this port may have
@@ -955,7 +956,7 @@ npreal_close(
 	if ( info->flags & ASYNC_CALLOUT_ACTIVE )
 		info->callout_termios = *tty->termios;
 #else
-	if ( info->flags & ASYNC_NORMAL_ACTIVE )
+	if ( tty_port_active(&info->ttyPort) )
 		info->normal_termios = tty->termios;
 	if ( info->flags & ASYNC_CALLOUT_ACTIVE )
 		info->callout_termios = tty->termios;
@@ -1585,10 +1586,10 @@ static void npreal_hangup(struct tty_struct *tty)
 
 	// Scott: 2005-09-05
 	// Prevent race condition on closing.
-	if (info->flags & ASYNC_CLOSING)
+	if (info->closing)
 		return;
 
-	info->flags |=  ASYNC_CLOSING;
+	info->closing = 1;
 	//
 	// do_tty_hangup() already do this
 	//	npreal_flush_buffer(tty);
@@ -1613,7 +1614,7 @@ static inline void npreal_check_modem_status(struct npreal_struct *info,
 	info->modem_status = status;
 	wake_up_interruptible(&info->delta_msr_wait);
 
-	if ( (info->flags & ASYNC_CHECK_CD) && (is_dcd_changed))
+	if ( tty_port_check_carrier(&info->ttyPort) && (is_dcd_changed))
 	{
 
 		if ( status & UART_MSR_DCD )
@@ -1678,7 +1679,7 @@ return(-EAGAIN);
 	 */
 	if ( MX_TTY_DRV(subtype) == SERIAL_TYPE_CALLOUT )
 	{
-		if ( info->flags & ASYNC_NORMAL_ACTIVE )
+		if ( tty_port_active(&info->ttyPort) )
 			return(-EBUSY);
 		if ( (info->flags & ASYNC_CALLOUT_ACTIVE) &&
 				(info->flags & ASYNC_SESSION_LOCKOUT) &&
@@ -1703,7 +1704,7 @@ return(-EAGAIN);
 		{
 			return(-EBUSY);
 		}
-		info->flags |= ASYNC_NORMAL_ACTIVE;
+		tty_port_set_active(&info->ttyPort, 1);
 		return(0);
 	}
 
@@ -1734,7 +1735,7 @@ return(-EAGAIN);
 	while ( 1 )
 	{
 		set_current_state(TASK_INTERRUPTIBLE);
-		if ( tty_hung_up_p(filp) || (info->flags & ASYNC_CLOSING) )
+		if ( tty_hung_up_p(filp) || (info->closing) )
 		{
 			if ( !tty_hung_up_p(filp) )
 			{
@@ -1752,7 +1753,7 @@ retval = -EAGAIN;
 			break;
 		}
 		if ( !(info->flags & ASYNC_CALLOUT_ACTIVE) &&
-				!(info->flags & ASYNC_CLOSING) &&
+				!(info->closing) &&
 				(do_clocal || (info->modem_status & UART_MSR_DCD)) )
 			break;
 		if ( signal_pending(current) )
@@ -1766,7 +1767,7 @@ retval = -EAGAIN;
 	remove_wait_queue(&info->open_wait, &wait);
 	if ( retval )
 		return(retval);
-	info->flags |= ASYNC_NORMAL_ACTIVE;
+	tty_port_set_active(&info->ttyPort, 1);
 	return(0);
 }
 
@@ -1832,7 +1833,7 @@ static int npreal_startup(struct npreal_struct * info,struct file *filp,struct t
 #endif
 	}
 #endif
-	if ( info->flags & ASYNC_INITIALIZED )
+	if ( tty_port_initialized(&info->ttyPort) )
 	{
 		clear_bit(NPREAL_NET_DO_INITIALIZE,&nd->flag);
 		if ( waitqueue_active(&nd->initialize_wait))
@@ -1978,7 +1979,7 @@ static int npreal_startup(struct npreal_struct * info,struct file *filp,struct t
 		test_and_clear_bit(TTY_IO_ERROR, &info->tty->flags);
 	info->xmit_cnt = info->xmit_head = info->xmit_tail = 0;
 
-	info->flags |= ASYNC_INITIALIZED;
+	tty_port_set_initialized(&info->ttyPort, 1);
 	clear_bit(NPREAL_NET_DO_INITIALIZE,&nd->flag);
 	if ( waitqueue_active(&nd->initialize_wait))
 		wake_up_interruptible( &nd->initialize_wait );
@@ -2019,7 +2020,7 @@ static void npreal_shutdown(struct npreal_struct * info)
 	}
 
 
-	if ( !(info->flags & ASYNC_INITIALIZED) )
+	if ( tty_port_initialized(&info->ttyPort) )
 	{
 		goto shutdown_ok;
 	}
@@ -2052,7 +2053,10 @@ static void npreal_shutdown(struct npreal_struct * info)
 	npreal_port_shutdown(info);
 	/* Make sure to disconnect the socket ,race with ASYNC_INITIALIZED */
 	//npreal_disconnect(nd, rsp_buffer, &rsp_length);
-	info->flags &= ~(ASYNC_NORMAL_ACTIVE|ASYNC_CALLOUT_ACTIVE|ASYNC_INITIALIZED|ASYNC_CLOSING);
+	info->flags &= ~(ASYNC_CALLOUT_ACTIVE);
+	info->closing = 0;
+	tty_port_set_active(&info->ttyPort, 0);
+	tty_port_set_initialized(&info->ttyPort, 0);
 	down (&info->rx_semaphore);
 	info->tty = 0;
 	up (&info->rx_semaphore);
@@ -2430,14 +2434,7 @@ static int npreal_port_init(struct npreal_struct *info,
 
 	}
 
-	if ( termio->c_cflag & CLOCAL )
-	{
-		info->flags &= ~ASYNC_CHECK_CD;
-	}
-	else
-	{
-		info->flags |= ASYNC_CHECK_CD;
-	}
+	tty_port_set_check_carrier(&info->ttyPort, ~termio->c_cflag & CLOCAL);
 	if ( !info->tty)
 	{
 		DBGPRINT(MX_DEBUG_ERROR, "info->tty is null\n");
@@ -2803,7 +2800,7 @@ static int npreal_set_serial_info(struct npreal_struct * info,
 	}
 	else
 		info->xmit_fifo_size = 1;
-	if ( info->flags & ASYNC_INITIALIZED )
+	if ( tty_port_initialized(&info->ttyPort) )
 	{
 		if ( flags != (info->flags & ASYNC_SPD_MASK) )
 		{
@@ -3078,7 +3075,7 @@ static void npreal_flush_to_ldisc(struct work_struct *work)
 		return;
 	}
 
-	if ( tty && (info->flags & ASYNC_INITIALIZED))
+	if ( tty && tty_port_initialized(&info->ttyPort) )
 	{
 #if (LINUX_VERSION_CODE < VERSION_CODE(3,8,0))  
 		spin_lock_irqsave(&tty->buf.lock, flags);
@@ -3802,7 +3799,7 @@ npreal_net_write (
 		goto done;
 	}
 
-	if (info->flags & ASYNC_CLOSING)
+	if (info->closing)
 	{
 		rtn = count; /* throw it away*/
 		goto done;
@@ -4148,7 +4145,7 @@ npreal_do_session_recovery(struct npreal_struct *info)
 		return;
 	if (!(nd->flag & NPREAL_NET_NODE_CONNECTED))
 		return;
-	if (info->flags & ASYNC_INITIALIZED)
+	if ( tty_port_initialized(&info->ttyPort) )
 	{
 #if (LINUX_VERSION_CODE < VERSION_CODE(3,7,0)) 	    
 		if (!(termio = info->tty->termios))
@@ -4332,7 +4329,7 @@ break;
 	//
 	// flow control
 	//
-	if (info->flags & ASYNC_INITIALIZED)
+	if ( tty_port_initialized(&info->ttyPort) )
 	{
 		if (termio->c_cflag & CRTSCTS)
 		{
-- 
2.39.1

