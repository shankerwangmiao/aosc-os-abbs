From 261af1b7b4780c6736c60751f37a1c4c5dac29b4 Mon Sep 17 00:00:00 2001
From: chenj <chenj@lemote.com>
Date: Thu, 1 Dec 2016 09:51:35 +0800
Subject: [PATCH 127/136] Optimize copy_page

---
 arch/mips/include/asm/uasm.h      |  1 +
 arch/mips/include/uapi/asm/inst.h |  7 +++++++
 arch/mips/mm/page.c               | 13 +++++++++++++
 arch/mips/mm/uasm-mips.c          |  1 +
 arch/mips/mm/uasm.c               |  3 ++-
 5 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/arch/mips/include/asm/uasm.h b/arch/mips/include/asm/uasm.h
index 8f73992e7..b574251e8 100644
--- a/arch/mips/include/asm/uasm.h
+++ b/arch/mips/include/asm/uasm.h
@@ -162,6 +162,7 @@ Ip_u2s3u1(_sd);
 Ip_u3u1u2(_seleqz);
 Ip_u3u1u2(_selnez);
 Ip_u2s3u1(_sh);
+Ip_u4u2u1s3(_gslq);
 Ip_u4u2u1s3(_gssq);
 Ip_u2u1u3(_sll);
 Ip_u3u2u1(_sllv);
diff --git a/arch/mips/include/uapi/asm/inst.h b/arch/mips/include/uapi/asm/inst.h
index 3a4861fa6..000081190 100644
--- a/arch/mips/include/uapi/asm/inst.h
+++ b/arch/mips/include/uapi/asm/inst.h
@@ -144,6 +144,13 @@ enum swc2_op {
 	gssq_op = 0x20,
 };
 
+/*
+ * func field of spec opcode.
+ */
+enum lwc2_op {
+	gslq_op = 0x20,
+};
+
 /*
  * rt field of bcond opcodes.
  */
diff --git a/arch/mips/mm/page.c b/arch/mips/mm/page.c
index 865430a60..d8db4b7d8 100644
--- a/arch/mips/mm/page.c
+++ b/arch/mips/mm/page.c
@@ -46,6 +46,10 @@
 #define T1 9
 #define T2 10
 #define T3 11
+#define T4 12
+#define T5 13
+#define T6 14
+#define T7 15
 #define T9 25
 #define RA 31
 
@@ -221,6 +225,7 @@ static void set_prefetch_parameters(void)
 
 #ifdef CONFIG_CPU_LOONGSON3
 	clear_word_size = 16;
+	copy_word_size = 16;
 #endif
 
 	/*
@@ -375,20 +380,28 @@ void build_clear_page(void)
 
 static void build_copy_load(u32 **buf, int reg, int off)
 {
+#ifdef CONFIG_CPU_LOONGSON3
+	uasm_i_gslq(buf, reg, reg+4, off, A1);
+#else
 	if (cpu_has_64bit_gp_regs) {
 		uasm_i_ld(buf, reg, off, A1);
 	} else {
 		uasm_i_lw(buf, reg, off, A1);
 	}
+#endif
 }
 
 static void build_copy_store(u32 **buf, int reg, int off)
 {
+#ifdef CONFIG_CPU_LOONGSON3
+	uasm_i_gssq(buf, reg, reg+4, off, A0);
+#else
 	if (cpu_has_64bit_gp_regs) {
 		uasm_i_sd(buf, reg, off, A0);
 	} else {
 		uasm_i_sw(buf, reg, off, A0);
 	}
+#endif
 }
 
 static inline void build_copy_load_pref(u32 **buf, int off)
diff --git a/arch/mips/mm/uasm-mips.c b/arch/mips/mm/uasm-mips.c
index 341e0430c..b7d60eac9 100644
--- a/arch/mips/mm/uasm-mips.c
+++ b/arch/mips/mm/uasm-mips.c
@@ -205,6 +205,7 @@ static const struct insn insn_table[insn_invalid] = {
 	[insn_xor]	= {M(spec_op, 0, 0, 0, 0, xor_op),  RS | RT | RD},
 	[insn_xori]	= {M(xori_op, 0, 0, 0, 0, 0),  RS | RT | UIMM},
 	[insn_yield]	= {M(spec3_op, 0, 0, 0, 0, yield_op), RS | RD},
+	[insn_gslq]	= {M(lwc2_op, 0, 0, 0, 0, gslq_op), RT | RS | RZ | RC},
 	[insn_gssq]	= {M(swc2_op, 0, 0, 0, 0, gssq_op), RT | RS | RZ | RC},
 };
 
diff --git a/arch/mips/mm/uasm.c b/arch/mips/mm/uasm.c
index d36571940..25768be67 100644
--- a/arch/mips/mm/uasm.c
+++ b/arch/mips/mm/uasm.c
@@ -67,7 +67,7 @@ enum opcode {
 	insn_sllv, insn_slt, insn_slti, insn_sltiu, insn_sltu, insn_sra,
 	insn_srav, insn_srl, insn_srlv, insn_subu, insn_sw, insn_sync,
 	insn_syscall, insn_tlbp, insn_tlbr, insn_tlbwi, insn_tlbwr, insn_wait,
-	insn_wsbh, insn_xor, insn_xori, insn_yield, insn_gssq,
+	insn_wsbh, insn_xor, insn_xori, insn_yield, insn_gslq, insn_gssq,
 	insn_invalid /* insn_invalid must be last */
 };
 
@@ -364,6 +364,7 @@ I_u2s3u1(_sd)
 I_u3u1u2(_seleqz)
 I_u3u1u2(_selnez)
 I_u2s3u1(_sh)
+I_u4u2u1s3(_gslq)
 I_u4u2u1s3(_gssq)
 I_u2u1u3(_sll)
 I_u3u2u1(_sllv)
-- 
2.39.1

