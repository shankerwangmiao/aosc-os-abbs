From c8e1f6cc9601c0675eec523e03c4b476e9f43af5 Mon Sep 17 00:00:00 2001
From: Huacai Chen <chenhc@lemote.com>
Date: Thu, 1 Dec 2016 09:51:35 +0800
Subject: [PATCH 013/136] tty: serial_core: Clear TTY_IO_ERROR if
 tty_port_open() return 0

After commit b3b57646186400d4f ("tty: serial_core: convert uart_open
to use tty_port_open") and 761ed4a94582ab291a ("tty: serial_core:
convert uart_close to use tty_port_close"), TTY_IO_ERROR is set by
tty_port_close() unconditionally, but cleared by tty_port_open() only
when tty_port_initialized() return 0.

This is a bug: If we use "console=ttyS*" in kernel parameters, the
corresponding serial port's port->console will be true. When somebody
close the serial port, tty_port_close() will return without calling
tty_port_set_initialized(port, 0). Then, when it is opened again,
tty_port_open() will not clear TTY_IO_ERROR, and serial port becomes
unavailable at last.

So, this patch clear TTY_IO_ERROR in uart_open() if tty_port_open()
return 0.

Signed-off-by: Ce Sun <sunc@lemote.com>
Signed-off-by: Huacai Chen <chenhc@lemote.com>
---
 drivers/tty/serial/serial_core.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/drivers/tty/serial/serial_core.c b/drivers/tty/serial/serial_core.c
index 7cc7bd8ac..ec7fd2b72 100644
--- a/drivers/tty/serial/serial_core.c
+++ b/drivers/tty/serial/serial_core.c
@@ -1796,6 +1796,8 @@ static int uart_open(struct tty_struct *tty, struct file *filp)
 	int retval;
 
 	retval = tty_port_open(&state->port, tty, filp);
+	if (!retval)
+		clear_bit(TTY_IO_ERROR, &tty->flags);
 	if (retval > 0)
 		retval = 0;
 
-- 
2.39.1

