From 6d622b09413901ad0751abdec7c3803e7f09f5c8 Mon Sep 17 00:00:00 2001
From: Jiaxun Yang <jiaxun.yang@flygoat.com>
Date: Sat, 8 Aug 2020 20:32:27 +0800
Subject: [PATCH 123/136] MIPS: Loongson: Rename ec_* for ACPI preparation

---
 .../include/asm/mach-loongson64/ec_wpce775l.h | 22 ++---
 arch/mips/loongson64/loongson-3/ec_wpce775l.c | 32 ++++----
 arch/mips/loongson64/loongson-3/workarounds.c |  4 +-
 drivers/platform/mips/ec_rom.c                |  8 +-
 drivers/platform/mips/lemote3a-laptop.c       | 82 +++++++++----------
 drivers/platform/mips/wpce_fan.c              | 14 ++--
 6 files changed, 79 insertions(+), 83 deletions(-)

diff --git a/arch/mips/include/asm/mach-loongson64/ec_wpce775l.h b/arch/mips/include/asm/mach-loongson64/ec_wpce775l.h
index 304f58616..f2606f943 100644
--- a/arch/mips/include/asm/mach-loongson64/ec_wpce775l.h
+++ b/arch/mips/include/asm/mach-loongson64/ec_wpce775l.h
@@ -381,19 +381,15 @@ extern unsigned char app_access_ec_flag;
 typedef int (*sci_handler)(int status);
 
 /* The general ec index-io port read action */
-extern unsigned char ec_read(unsigned char index);
-extern unsigned char ec_read_all(unsigned char command, unsigned char index);
-extern unsigned char ec_read_noindex(unsigned char command);
-
+extern unsigned char wpce775l_ec_read(unsigned char index);
+extern unsigned char wpce775l_ec_read_all(unsigned char command, unsigned char index);
+extern unsigned char wpce775l_ec_read_noindex(unsigned char command);
 /* The general ec index-io port write action */
-extern int ec_write(unsigned char index, unsigned char data);
-extern int ec_write_all(unsigned char command, unsigned char index, unsigned char data);
-extern int ec_write_noindex(unsigned char command, unsigned char data);
-
+extern int wpce775l_ec_write(unsigned char index, unsigned char data);
+extern int wpce775l_ec_write_all(unsigned char command, unsigned char index, unsigned char data);
+extern int wpce775l_ec_write_noindex(unsigned char command, unsigned char data);
 /* Query sequence of 62/66 port access routine. */
-extern int ec_query_seq(unsigned char command);
-extern int ec_get_event_num(void);
-
-extern void clean_ec_event_status(void);
-
+extern int wpce775l_ec_query_seq(unsigned char command);
+extern int wpce775l_ec_get_event_num(void);
+extern void wpce775l_clean_ec_event_status(void);
 #endif /* __EC_WPCE775L_H__ */
diff --git a/arch/mips/loongson64/loongson-3/ec_wpce775l.c b/arch/mips/loongson64/loongson-3/ec_wpce775l.c
index f407ddbe9..6a60d8b92 100644
--- a/arch/mips/loongson64/loongson-3/ec_wpce775l.c
+++ b/arch/mips/loongson64/loongson-3/ec_wpce775l.c
@@ -79,7 +79,7 @@ static unsigned char recv_ec_data(void)
 	return data;
 }
 
-void clean_ec_event_status(void)
+void wpce775l_clean_ec_event_status(void)
 {
 	unsigned long flags;
 
@@ -87,9 +87,9 @@ void clean_ec_event_status(void)
 	outl(0x404000, 0x810);
 	spin_unlock_irqrestore(&port_access_lock, flags);
 }
-EXPORT_SYMBOL(clean_ec_event_status);
+EXPORT_SYMBOL(wpce775l_clean_ec_event_status);
 
-unsigned char ec_read(unsigned char index)
+unsigned char wpce775l_ec_read( unsigned char index)
 {
 	unsigned char value = 0;
 	unsigned long flags;
@@ -114,9 +114,9 @@ unsigned char ec_read(unsigned char index)
 
 	return value;
 }
-EXPORT_SYMBOL(ec_read);
+EXPORT_SYMBOL(wpce775l_ec_read);
 
-unsigned char ec_read_all(unsigned char command, unsigned char index)
+unsigned char wpce775l_ec_read_all(unsigned char command, unsigned char index)
 {
 	unsigned char value = 0;
 	unsigned long flags;
@@ -139,9 +139,9 @@ unsigned char ec_read_all(unsigned char command, unsigned char index)
 
 	return value;
 }
-EXPORT_SYMBOL(ec_read_all);
+EXPORT_SYMBOL(wpce775l_ec_read_all);
 
-unsigned char ec_read_noindex(unsigned char command)
+unsigned char wpce775l_ec_read_noindex(unsigned char command)
 {
 	unsigned char value = 0;
 	unsigned long flags;
@@ -159,9 +159,9 @@ unsigned char ec_read_noindex(unsigned char command)
 
 	return value;
 }
-EXPORT_SYMBOL(ec_read_noindex);
+EXPORT_SYMBOL(wpce775l_ec_read_noindex);
 
-int ec_write(unsigned char index, unsigned char data)
+int wpce775l_ec_write(unsigned char index, unsigned char data)
 {
 	int ret = 0;
 	unsigned long flags;
@@ -187,9 +187,9 @@ int ec_write(unsigned char index, unsigned char data)
 
 	return ret;
 }
-EXPORT_SYMBOL(ec_write);
+EXPORT_SYMBOL(wpce775l_ec_write);
 
-int ec_write_all(unsigned char command, unsigned char index, unsigned char data)
+int wpce775l_ec_write_all(unsigned char command, unsigned char index, unsigned char data)
 {
 	unsigned long flags;
 
@@ -201,9 +201,9 @@ int ec_write_all(unsigned char command, unsigned char index, unsigned char data)
 
 	return 0;
 }
-EXPORT_SYMBOL(ec_write_all);
+EXPORT_SYMBOL(wpce775l_ec_write_all);
 
-int ec_write_noindex(unsigned char command, unsigned char data)
+int wpce775l_ec_write_noindex(unsigned char command, unsigned char data)
 {
 	unsigned long flags;
 
@@ -214,9 +214,9 @@ int ec_write_noindex(unsigned char command, unsigned char data)
 
 	return 0;
 }
-EXPORT_SYMBOL(ec_write_noindex);
+EXPORT_SYMBOL(wpce775l_ec_write_noindex);
 
-int ec_query_get_event_num(void)
+int wpce775l_ec_query_get_event_num(void)
 {
 	unsigned char value = 0;
 	unsigned long flags;
@@ -246,4 +246,4 @@ int ec_query_get_event_num(void)
 
 	return value;
 }
-EXPORT_SYMBOL(ec_query_get_event_num);
+EXPORT_SYMBOL(wpce775l_ec_query_get_event_num);
diff --git a/arch/mips/loongson64/loongson-3/workarounds.c b/arch/mips/loongson64/loongson-3/workarounds.c
index a73e12906..65ebdb05e 100644
--- a/arch/mips/loongson64/loongson-3/workarounds.c
+++ b/arch/mips/loongson64/loongson-3/workarounds.c
@@ -23,7 +23,7 @@ static void gpio_lvds_on(void)
 void turn_off_lvds(void)
 {
 	if (loongson_sysconf.workarounds & WORKAROUND_LVDS_EC)
-		ec_write(INDEX_BACKLIGHT_STSCTRL, BACKLIGHT_OFF);
+		wpce775l_ec_write(INDEX_BACKLIGHT_STSCTRL, BACKLIGHT_OFF);
 	if (loongson_sysconf.workarounds & WORKAROUND_LVDS_GPIO)
 		gpio_lvds_off();
 }
@@ -31,7 +31,7 @@ void turn_off_lvds(void)
 void turn_on_lvds(void)
 {
 	if (loongson_sysconf.workarounds & WORKAROUND_LVDS_EC)
-		ec_write(INDEX_BACKLIGHT_STSCTRL, BACKLIGHT_ON);
+		wpce775l_ec_write(INDEX_BACKLIGHT_STSCTRL, BACKLIGHT_ON);
 	if (loongson_sysconf.workarounds & WORKAROUND_LVDS_GPIO)
 		gpio_lvds_on();
 }
diff --git a/drivers/platform/mips/ec_rom.c b/drivers/platform/mips/ec_rom.c
index b7b162419..03435ee57 100644
--- a/drivers/platform/mips/ec_rom.c
+++ b/drivers/platform/mips/ec_rom.c
@@ -74,10 +74,10 @@ static int misc_ioctl(struct inode * inode, struct file *filp, u_int cmd, u_long
 
 			if (ecreg->flag == 0) {
 				/* has index read ACPI command */
-				ecreg->val = (unsigned short)ec_read_all((unsigned char)ecreg->addr, ecreg->index);
+				ecreg->val = (unsigned short)wpce775l_ec_read_all((unsigned char)ecreg->addr, ecreg->index);
 			} else if (ecreg->flag == 1) {
 				/* no index read ACPI command */
-				ecreg->val = (unsigned short)ec_read_noindex((unsigned char)ecreg->addr);
+				ecreg->val = (unsigned short)wpce775l_ec_read_noindex((unsigned char)ecreg->addr);
 			}
 			ret = copy_to_user(ptr, ecreg, sizeof(struct ec_reg));
 			if (ret) {
@@ -94,10 +94,10 @@ static int misc_ioctl(struct inode * inode, struct file *filp, u_int cmd, u_long
 
 			if (ecreg->flag == 1) {
 				/* write no index command */
-				ec_write_noindex((unsigned char)ecreg->addr, (unsigned char)ecreg->val);
+				wpce775l_ec_write_noindex((unsigned char)ecreg->addr, (unsigned char)ecreg->val);
 			} else {
 				/* write has index command */
-				ec_write_all((unsigned char)ecreg->addr, (unsigned char)ecreg->index, (unsigned char)ecreg->val);
+				wpce775l_ec_write_all((unsigned char)ecreg->addr, (unsigned char)ecreg->index, (unsigned char)ecreg->val);
 			}
 			break;
 
diff --git a/drivers/platform/mips/lemote3a-laptop.c b/drivers/platform/mips/lemote3a-laptop.c
index a571d50a1..644ed761f 100644
--- a/drivers/platform/mips/lemote3a-laptop.c
+++ b/drivers/platform/mips/lemote3a-laptop.c
@@ -231,7 +231,7 @@ static void lemote3a_tp_led_set(struct led_classdev *led_cdev,
 static int lemote3a_hotkey_init(void);
 /* Hotkey device exit handler */
 static void lemote3a_hotkey_exit(void);
-extern int ec_query_get_event_num(void);
+extern int wpce775l_ec_query_get_event_num(void);
 
 static int lemote3a_healthy_led_init(void);
 
@@ -431,8 +431,8 @@ static int wpce775l_probe(struct platform_device *dev)
 		ret = PTR_ERR(lemote3a_backlight_dev);
 		goto fail_backlight_device_register;
 	}
-	lemote3a_backlight_dev->props.max_brightness = ec_read(INDEX_DISPLAY_MAXBRIGHTNESS_LEVEL);
-	lemote3a_backlight_dev->props.brightness = ec_read(INDEX_DISPLAY_BRIGHTNESS);
+	lemote3a_backlight_dev->props.max_brightness = wpce775l_ec_read(INDEX_DISPLAY_MAXBRIGHTNESS_LEVEL);
+	lemote3a_backlight_dev->props.brightness = wpce775l_ec_read(INDEX_DISPLAY_BRIGHTNESS);
 	backlight_update_status(lemote3a_backlight_dev);
 	/* Register backlight END */
 
@@ -499,7 +499,7 @@ static int wpce775l_probe(struct platform_device *dev)
 	ret = lemote3a_healthy_led_init();
 
 	/* Request control for backlight device START */
-	ec_write(INDEX_BACKLIGHT_CTRLMODE, BACKLIGHT_CTRL_BYHOST);
+	wpce775l_ec_write(INDEX_BACKLIGHT_CTRLMODE, BACKLIGHT_CTRL_BYHOST);
 	/* Request control for backlight device END */
 
 	return 0;
@@ -554,7 +554,7 @@ static void __exit lemote3a_laptop_exit(void)
 	free_irq(lemote3a_sci_device->irq, lemote3a_sci_device);
 
 	/* Return control for backlight device START */
-	ec_write(INDEX_BACKLIGHT_CTRLMODE, BACKLIGHT_CTRL_BYEC);
+	wpce775l_ec_write(INDEX_BACKLIGHT_CTRLMODE, BACKLIGHT_CTRL_BYEC);
 	/* Return control for backlight device END */
 
 	/* Camera control misc device */
@@ -613,7 +613,7 @@ static int lemote3a_laptop_resume(struct platform_device * pdev)
 	 *
 	 * Clear all SCI events when suspend
 	 */
-	clean_ec_event_status();
+	wpce775l_clean_ec_event_status();
 
 	return 0;
 }
@@ -643,9 +643,9 @@ static ssize_t data_destroy_store(struct device_driver *driver, const char *buf,
 		return -EINVAL;
 
 	if ('0' == buf[0])
-		ec_write(INDEX_DATA_DESTROY, DATA_DESTROY_OFF);
+		wpce775l_ec_write(INDEX_DATA_DESTROY, DATA_DESTROY_OFF);
 	else
-		ec_write(INDEX_DATA_DESTROY, DATA_DESTROY_ON);
+		wpce775l_ec_write(INDEX_DATA_DESTROY, DATA_DESTROY_ON);
 
 	return count;
 }
@@ -671,7 +671,7 @@ ssize_t lemote3a_cam_misc_read(struct file * filp,
 	if (0 != *offset)
 		return 0;
 
-	ret = ec_read(INDEX_CAM_STSCTRL);
+	ret = wpce775l_ec_read(INDEX_CAM_STSCTRL);
 	ret = sprintf(buffer, "%d\n", ret);
 	*offset = ret;
 
@@ -686,9 +686,9 @@ static ssize_t lemote3a_cam_misc_write(struct file * filp,
 		return -EINVAL;
 
 	if ('0' == buffer[0])
-		ec_write(INDEX_CAM_STSCTRL, CAM_STSCTRL_OFF);
+		wpce775l_ec_write(INDEX_CAM_STSCTRL, CAM_STSCTRL_OFF);
 	else
-		ec_write(INDEX_CAM_STSCTRL, CAM_STSCTRL_ON);
+		wpce775l_ec_write(INDEX_CAM_STSCTRL, CAM_STSCTRL_ON);
 
 	return size;
 }
@@ -709,7 +709,7 @@ static int lemote3a_set_brightness(struct backlight_device * pdev)
 		level = 0;
 	}
 
-	ec_write(INDEX_DISPLAY_BRIGHTNESS, level);
+	wpce775l_ec_write(INDEX_DISPLAY_BRIGHTNESS, level);
 
 	return 0;
 }
@@ -718,7 +718,7 @@ static int lemote3a_set_brightness(struct backlight_device * pdev)
 static int lemote3a_get_brightness(struct backlight_device * pdev)
 {
 	/* Read level from ec */
-	return ec_read(INDEX_DISPLAY_BRIGHTNESS);
+	return wpce775l_ec_read(INDEX_DISPLAY_BRIGHTNESS);
 }
 
 /* Update battery information handle function. */
@@ -730,50 +730,50 @@ static void lemote3a_power_battery_info_update(unsigned char bat_reg_flag)
 		/* Update power_info->temperature value */
 		case BAT_REG_TEMP_FLAG:
 			lemote3a_power_info_power_status_update();
-			bat_info_value = (ec_read(INDEX_BATTERY_TEMP_HIGH) << 8) | ec_read(INDEX_BATTERY_TEMP_LOW);
+			bat_info_value = (wpce775l_ec_read(INDEX_BATTERY_TEMP_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_TEMP_LOW);
 			power_info->temperature = (power_info->bat_in) ? (bat_info_value / 10 - 273) : 0;
 			break;
 		/* Update power_info->voltage value */
 		case BAT_REG_VOLTAGE_FLAG:
 			lemote3a_power_info_power_status_update();
-			bat_info_value = (ec_read(INDEX_BATTERY_VOL_HIGH) << 8) | ec_read(INDEX_BATTERY_VOL_LOW);
+			bat_info_value = (wpce775l_ec_read(INDEX_BATTERY_VOL_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_VOL_LOW);
 			power_info->voltage_now = (power_info->bat_in) ? bat_info_value : 0;
 			break;
 		/* Update power_info->current_now value */
 		case BAT_REG_CURRENT_FLAG:
 			lemote3a_power_info_power_status_update();
-			bat_info_value = (ec_read(INDEX_BATTERY_CURRENT_HIGH) << 8) | ec_read(INDEX_BATTERY_CURRENT_LOW);
+			bat_info_value = (wpce775l_ec_read(INDEX_BATTERY_CURRENT_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_CURRENT_LOW);
 			power_info->current_now = (power_info->bat_in) ? bat_info_value : 0;
 			break;
 		/* Update power_info->current_avg value */
 		case BAT_REG_AC_FLAG:
 			lemote3a_power_info_power_status_update();
-			bat_info_value = (ec_read(INDEX_BATTERY_AC_HIGH) << 8) | ec_read(INDEX_BATTERY_AC_LOW);
+			bat_info_value = (wpce775l_ec_read(INDEX_BATTERY_AC_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_AC_LOW);
 			power_info->current_average = (power_info->bat_in) ? bat_info_value : 0;
 			break;
 		/* Update power_info->remain_capacity value */
 		case BAT_REG_RC_FLAG:
-			power_info->remain_capacity = (ec_read(INDEX_BATTERY_RC_HIGH) << 8) | ec_read(INDEX_BATTERY_RC_LOW);
+			power_info->remain_capacity = (wpce775l_ec_read(INDEX_BATTERY_RC_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_RC_LOW);
 			break;
 		/* Update power_info->full_charged_capacity value */
 		case BAT_REG_FCC_FLAG:
-			power_info->full_charged_capacity = (ec_read(INDEX_BATTERY_FCC_HIGH) << 8) | ec_read(INDEX_BATTERY_FCC_LOW);
+			power_info->full_charged_capacity = (wpce775l_ec_read(INDEX_BATTERY_FCC_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_FCC_LOW);
 			break;
 		/* Update power_info->remain_time value */
 		case BAT_REG_ATTE_FLAG:
-			power_info->remain_time = (ec_read(INDEX_BATTERY_ATTE_HIGH) << 8) | ec_read(INDEX_BATTERY_ATTE_LOW);
+			power_info->remain_time = (wpce775l_ec_read(INDEX_BATTERY_ATTE_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_ATTE_LOW);
 			break;
 		/* Update power_info->fullchg_time value */
 		case BAT_REG_ATTF_FLAG:
-			power_info->fullchg_time = (ec_read(INDEX_BATTERY_ATTF_HIGH) << 8) | ec_read(INDEX_BATTERY_ATTF_LOW);
+			power_info->fullchg_time = (wpce775l_ec_read(INDEX_BATTERY_ATTF_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_ATTF_LOW);
 			break;
 		/* Update power_info->curr_cap value */
 		case BAT_REG_RSOC_FLAG:
-			power_info->remain_capacity_percent = ec_read(INDEX_BATTERY_CAPACITY);
+			power_info->remain_capacity_percent = wpce775l_ec_read(INDEX_BATTERY_CAPACITY);
 			break;
 		/* Update power_info->cycle_count value */
 		case BAT_REG_CYCLCNT_FLAG:
-			power_info->cycle_count = (ec_read(INDEX_BATTERY_CYCLECNT_HIGH) << 8) | ec_read(INDEX_BATTERY_CYCLECNT_LOW);
+			power_info->cycle_count = (wpce775l_ec_read(INDEX_BATTERY_CYCLECNT_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_CYCLECNT_LOW);
 			break;
 
 		default:
@@ -800,7 +800,7 @@ static void lemote3a_power_info_battery_static_update(void)
 	unsigned int manufacture_date, bat_serial_number;
 	char device_chemistry[5];
 
-	manufacture_date = (ec_read(INDEX_BATTERY_MFD_HIGH) << 8) | ec_read(INDEX_BATTERY_MFD_LOW);
+	manufacture_date = (wpce775l_ec_read(INDEX_BATTERY_MFD_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_MFD_LOW);
 	sprintf(power_info->manufacture_date, "%d-%d-%d", (manufacture_date >> 9) + 1980,
             (manufacture_date & 0x01E0) >> 5, manufacture_date & 0x001F);
 	lemote3a_bat_get_string(INDEX_BATTERY_MFN_LENG, power_info->manufacturer_name);
@@ -830,14 +830,14 @@ static void lemote3a_power_info_battery_static_update(void)
 		power_info->technology = POWER_SUPPLY_TECHNOLOGY_UNKNOWN;
 	}
 
-	bat_serial_number = (ec_read(INDEX_BATTERY_SN_HIGH) << 8) | ec_read(INDEX_BATTERY_SN_LOW);
+	bat_serial_number = (wpce775l_ec_read(INDEX_BATTERY_SN_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_SN_LOW);
 	snprintf(power_info->serial_number, 8, "%x", bat_serial_number);
 
-	power_info->cell_count = ((ec_read(INDEX_BATTERY_CV_HIGH) << 8) | ec_read(INDEX_BATTERY_CV_LOW)) / 4200;
+	power_info->cell_count = ((wpce775l_ec_read(INDEX_BATTERY_CV_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_CV_LOW)) / 4200;
 
-	power_info->design_capacity = (ec_read(INDEX_BATTERY_DC_HIGH) << 8) | ec_read(INDEX_BATTERY_DC_LOW);
-	power_info->design_voltage = (ec_read(INDEX_BATTERY_DV_HIGH) << 8) | ec_read(INDEX_BATTERY_DV_LOW);
-	power_info->full_charged_capacity = (ec_read(INDEX_BATTERY_FCC_HIGH) << 8) | ec_read(INDEX_BATTERY_FCC_LOW);
+	power_info->design_capacity = (wpce775l_ec_read(INDEX_BATTERY_DC_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_DC_LOW);
+	power_info->design_voltage = (wpce775l_ec_read(INDEX_BATTERY_DV_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_DV_LOW);
+	power_info->full_charged_capacity = (wpce775l_ec_read(INDEX_BATTERY_FCC_HIGH) << 8) | wpce775l_ec_read(INDEX_BATTERY_FCC_LOW);
 	printk(KERN_INFO "LS3ANB Battery Information:\nManufacturerName: %s, DeviceName: %s, DeviceChemistry: %s\n",
 			power_info->manufacturer_name, power_info->device_name, device_chemistry);
 	printk(KERN_INFO "SerialNumber: %s, ManufactureDate: %s, CellNumber: %d\n",
@@ -851,13 +851,13 @@ static void lemote3a_power_info_power_status_update(void)
 {
 	unsigned int power_status = 0;
 
-	power_status = ec_read(INDEX_POWER_STATUS);
+	power_status = wpce775l_ec_read(INDEX_POWER_STATUS);
 
 	power_info->ac_in = (power_status & MASK(BIT_POWER_ACPRES)) ?
 					APM_AC_ONLINE : APM_AC_OFFLINE;
 
 	power_info->bat_in = (power_status & MASK(BIT_POWER_BATPRES)) ? 1 : 0;
-	if( power_info->bat_in && ((ec_read(INDEX_BATTERY_DC_LOW) | (ec_read(INDEX_BATTERY_DC_HIGH) << 8)) == 0) )
+	if( power_info->bat_in && ((wpce775l_ec_read(INDEX_BATTERY_DC_LOW) | (wpce775l_ec_read(INDEX_BATTERY_DC_HIGH) << 8)) == 0) )
 		power_info->bat_in = 0;
 
 	power_info->health = (power_info->bat_in) ?	POWER_SUPPLY_HEALTH_GOOD :
@@ -890,9 +890,9 @@ static void lemote3a_bat_get_string(unsigned char index, unsigned char *bat_stri
 {
 	unsigned char length, i;
 
-	length = ec_read(index);
+	length = wpce775l_ec_read(index);
 	for (i = 0; i < length; i++) {
-		*bat_string++ = ec_read(++index);
+		*bat_string++ = wpce775l_ec_read(++index);
 	}
 	*bat_string = '\0';
 }
@@ -1060,7 +1060,7 @@ static int sci_pci_init(void)
 
 	/* Clear sci status: GPM9Status field in bit14 of
 	 * EVENT_STATUS register for SB710, write 1 to clear */
-	clean_ec_event_status();
+	wpce775l_clean_ec_event_status();
 
 	/* Alloc the interrupt for sci not pci */
 	ret = request_irq(lemote3a_sci_device->irq, lemote3a_sci_int_routine,
@@ -1093,7 +1093,7 @@ static irqreturn_t lemote3a_sci_int_routine(int irq, void * dev_id)
 		return IRQ_NONE;
 	}
 
-	event = ec_query_get_event_num();
+	event = wpce775l_ec_query_get_event_num();
 	if ((SCI_EVENT_NUM_START > event) || (SCI_EVENT_NUM_END < event)) {
 		goto exit_event_action;
 	}
@@ -1103,12 +1103,12 @@ static irqreturn_t lemote3a_sci_int_routine(int irq, void * dev_id)
 
 	/* Clear sci status: GPM9Status field in bit14 of
 	 * EVENT_STATUS register for SB710, write 1 to clear */
-	clean_ec_event_status();
+	wpce775l_clean_ec_event_status();
 
 	return IRQ_HANDLED;
 
 exit_event_action:
-	clean_ec_event_status();
+	wpce775l_clean_ec_event_status();
 	return IRQ_NONE;
 }
 
@@ -1121,7 +1121,7 @@ void lemote3a_sci_event_handler(int event)
 
 	sep = (struct sci_event*)&(se[event]);
 	if (0 != sep->index) {
-		status = ec_read(sep->index);
+		status = wpce775l_ec_read(sep->index);
 	}
 	if (NULL != sep->handler) {
 		status = sep->handler(status);
@@ -1145,7 +1145,7 @@ extern void radeon_lvds_dpms_off(void);
 
 static void lemote3a_lvds_dpms_callback(struct work_struct *dummy)
 {
-	int backlight_on = ec_read(INDEX_BACKLIGHT_STSCTRL);
+	int backlight_on = wpce775l_ec_read(INDEX_BACKLIGHT_STSCTRL);
 
 	if (backlight_on)
 		radeon_lvds_dpms_on();
@@ -1235,14 +1235,14 @@ static void lemote3a_tp_led_set(struct led_classdev *led_cdev,
 {
 	int val = brightness ? TP_EN_LED_ON : TP_EN_LED_OFF;
 
-	ec_write(INDEX_TOUCHPAD_ENABLE_LED, val);
+	wpce775l_ec_write(INDEX_TOUCHPAD_ENABLE_LED, val);
 }
 
 static void do_healthy_led_timer(struct work_struct *work)
 {
 	static unsigned char times_count = 0;
 
-	ec_write(INDEX_BOARD_HEALTHY, times_count);
+	wpce775l_ec_write(INDEX_BOARD_HEALTHY, times_count);
 	schedule_delayed_work(&healthy_led_control, msecs_to_jiffies(1000));
 	times_count++;
 }
diff --git a/drivers/platform/mips/wpce_fan.c b/drivers/platform/mips/wpce_fan.c
index ecef3158c..595ea490f 100644
--- a/drivers/platform/mips/wpce_fan.c
+++ b/drivers/platform/mips/wpce_fan.c
@@ -77,7 +77,7 @@ static int wpce_set_fan_level(u8 level)
 	if (level > MAX_FAN_LEVEL)
 		level = MAX_FAN_LEVEL;
 
-	ec_write(INDEX_FAN_SPEED_LEVEL, level);
+	wpce775l_ec_write(INDEX_FAN_SPEED_LEVEL, level);
 	return 0;
 }
 
@@ -86,7 +86,7 @@ static ssize_t get_fan_level(struct device *dev,
 {
 	u8 val;
 
-	val = ec_read(INDEX_FAN_SPEED_LEVEL);
+	val = wpce775l_ec_read(INDEX_FAN_SPEED_LEVEL);
 	return sprintf(buf, "%d\n", val);
 }
 
@@ -107,8 +107,8 @@ static ssize_t get_fan_speed(struct device *dev,
 {
 	u32 val;
 
-	val = (ec_read(INDEX_FAN_SPEED_HIGH) << 8) +
-			ec_read(INDEX_FAN_SPEED_LOW);
+	val = (wpce775l_ec_read(INDEX_FAN_SPEED_HIGH) << 8) +
+			wpce775l_ec_read(INDEX_FAN_SPEED_LOW);
 	return sprintf(buf, "%d\n", val);
 }
 
@@ -118,7 +118,7 @@ static void notify_temp(struct work_struct *work)
 
 	temp =  fan_policy.depend_temp(0) / 1000;
 
-	ec_write_noindex(0x4d, temp);
+	wpce775l_ec_write_noindex(0x4d, temp);
 
 	queue_delayed_work(notify_workqueue, &notify_work,
 				fan_policy.adjust_period * HZ);
@@ -134,13 +134,13 @@ static int notify_temp_to_EC(void)
 
 static int kernel_control_fan(void)
 {
-	ec_write(INDEX_FAN_CTRLMOD,FAN_CTRL_BYHOST);
+	wpce775l_ec_write(INDEX_FAN_CTRLMOD,FAN_CTRL_BYHOST);
 	return 0;
 }
 
 static int ec_control_fan(void)
 {
-	ec_write(INDEX_FAN_CTRLMOD,FAN_CTRL_BYEC);
+	wpce775l_ec_write(INDEX_FAN_CTRLMOD,FAN_CTRL_BYEC);
 	return 0;
 }
 
-- 
2.39.1

